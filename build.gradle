plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.onpurple'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.mysql:mysql-connector-j:8.0.31'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	//  JWT
	compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

	//  validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// AWS S3 이미지 업로드를 위한 디펜던시
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.112'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'

	//websocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-devtools'

	//websocket 지원 안하는 낮은 버전 브라우저에서도 websocket 사용할 수 있게 해주는 라이브러리
	//implementation 'org.webjars:sockjs-client:1.1.2'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	//stomp 라이브러리
	implementation 'org.webjars:stomp-websocket:2.3.3-1'

	//Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	//embedded-redis
	implementation group: 'it.ozimov', name: 'embedded-redis', version: '0.7.2'
	// QueryDSL 적용을 위한 의존성 (SpringBoot3.0 부터는 jakarta 사용해야함)
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	// AOP
	implementation 'org.springframework:spring-aop'
	// websocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

}

tasks.named('test') {
	useJUnitPlatform()
}
